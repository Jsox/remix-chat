generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filteredRelationCount", "fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  email            String?            @unique
  name             String?
  avatar           String?
  isAdmin          Boolean?           @default(false)
  phone            String?            @unique
  tokens           Int?               @default(1000)
  didPay           Boolean?           @default(false)
  active           Boolean?           @default(true)
  password         String?
  chatMessages     ChatMessage[]
  Projects         Project[]
  Sections         Section[]
  Topics           Topic[]
  ChatCompletition ChatCompletition[]

  @@index([id])
}

model ChatMessage {
  id                    Int               @id @default(autoincrement())
  userId                Int?
  created               DateTime          @default(now())
  totalTokens           Int?
  messageId             String?           @unique
  conversationId        String?
  answerToChatMessageId Int?
  text                  String            @db.VarChar(65535)
  by                    MessageAuthor
  User                  User?             @relation(fields: [userId], references: [id])
  ChatCompletition      ChatCompletition? @relation(fields: [chatCompletitionId], references: [id])
  chatCompletitionId    Int?

  @@index([messageId, conversationId])
  @@index([userId], map: "ChatMessage_userId_fkey")
}

model Translate {
  id   Int    @id @default(autoincrement())
  ru   String @db.VarChar(65535)
  en   String @db.VarChar(65535)
  hash String @unique
}

model ChatCompletition {
  id          Int           @id @default(autoincrement())
  query       String        @db.VarChar(65535)
  answer      String        @db.VarChar(65535)
  created     DateTime      @default(now())
  totalTokens Int
  messageId   String        @unique
  userId      Int
  User        User          @relation(fields: [userId], references: [id])
  Section     Section[]
  Topic       Topic[]
  ChatMessage ChatMessage[]
}

model Project {
  id       Int       @id @default(autoincrement())
  created  DateTime  @default(now())
  title    String
  url      String
  Sections Section[]
  Topics   Topic[]
  User     User?     @relation(fields: [userId], references: [id])
  userId   Int?
  active   Boolean   @default(true)
}

model Section {
  id                     Int               @id @default(autoincrement())
  created                DateTime          @default(now())
  slug                   String
  sectionTitle           String
  sectionMetaTitle       String            @default("") @db.VarChar(500)
  sectionHtmlDescription String            @default("") @db.Text
  sectionMetaDescription String            @db.VarChar(1000)
  sectionKeyWords        String            @default("") @db.VarChar(500)
  Project                Project?          @relation(fields: [projectId], references: [id])
  projectId              Int?
  User                   User              @relation(fields: [userId], references: [id])
  userId                 Int
  Topics                 Topic[]
  isFullFilled           Boolean           @default(false)
  active                 Boolean           @default(true)
  ChatCompletition       ChatCompletition? @relation(fields: [chatCompletitionId], references: [id])
  chatCompletitionId     Int?

  @@fulltext([sectionTitle])
  @@fulltext([sectionTitle, sectionMetaTitle, sectionHtmlDescription, sectionMetaDescription, sectionKeyWords])
}

model Topic {
  id                   Int               @id @default(autoincrement())
  created              DateTime          @default(now())
  slug                 String
  topicTitle           String            @db.VarChar(500)
  topicMetaTitle       String            @default("") @db.VarChar(500)
  topicHtmlSummary     String            @default("") @db.Text
  topicMetaDescription String            @db.VarChar(1000)
  topicHtmlPost        String            @default("") @db.Text
  topicKeyWords        String            @default("") @db.VarChar(500)
  isFullFilled         Boolean           @default(false)
  Project              Project?          @relation(fields: [projectId], references: [id])
  projectId            Int?
  User                 User              @relation(fields: [userId], references: [id])
  userId               Int
  Section              Section?          @relation(fields: [sectionId], references: [id])
  sectionId            Int?
  active               Boolean           @default(true)
  ChatCompletition     ChatCompletition? @relation(fields: [chatCompletitionId], references: [id])
  chatCompletitionId   Int?
}

enum MessageAuthor {
  User
  AI
}
